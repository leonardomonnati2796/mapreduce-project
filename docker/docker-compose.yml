# MapReduce Cluster con Fault Tolerance
# Utilizza variabili d'ambiente per configurazione centralizzata

# Variabili di configurazione (possono essere sovrascritte con file .env)
x-common-vars: &common-vars
  RAFT_ADDRESSES: "master0:1234,master1:1234,master2:1234"
  RPC_ADDRESSES: "master0:8000,master1:8001,master2:8002"
  TMP_PATH: "/tmp/mapreduce"
  METRICS_ENABLED: "true"
  METRICS_PORT: "9090"
  MAPREDUCE_MASTER_TASK_TIMEOUT: "120s"
  MAPREDUCE_MASTER_HEARTBEAT_INTERVAL: "5s"
  MAPREDUCE_WORKER_RETRY_INTERVAL: "2s"
  # Dynamic reducer configuration - number of reducers equals number of workers
  WORKER_COUNT: "3"

# Variabili estese per servizi aggiuntivi
x-extended-vars: &extended-vars
  RAFT_ADDRESSES: "master0:1234,master1:1234,master2:1234,master3:1234"
  RPC_ADDRESSES: "master0:8000,master1:8001,master2:8002,master3:8000"
  TMP_PATH: "/tmp/mapreduce"
  METRICS_ENABLED: "true"
  METRICS_PORT: "9090"
  MAPREDUCE_MASTER_TASK_TIMEOUT: "120s"
  MAPREDUCE_MASTER_HEARTBEAT_INTERVAL: "5s"
  MAPREDUCE_WORKER_RETRY_INTERVAL: "2s"
  # Dynamic reducer configuration - number of reducers equals number of workers
  WORKER_COUNT: "4"

# Configurazione comune per i master
x-master-config: &master-config
  build:
    context: ..
    dockerfile: docker/Dockerfile
  networks:
    - mapreduce-net
  volumes:
    - intermediate-data:/tmp/mapreduce
    - ${PWD}/data:/root/data
  environment:
    <<: *common-vars
    # - RAFT_CLEAN_START: "true"  # Uncomment per pulire i dati Raft (solo per debug)
  restart: unless-stopped
  stop_grace_period: 30s

# Configurazione comune per i worker
x-worker-config: &worker-config
  build:
    context: ..
    dockerfile: docker/Dockerfile
  command: ["./mapreduce", "worker"]
  depends_on: ["master0", "master1", "master2"]
  networks:
    - mapreduce-net
  volumes:
    - intermediate-data:/tmp/mapreduce
    - ${PWD}/data:/root/data
  environment:
    RPC_ADDRESSES: "master0:8000,master1:8001,master2:8002"
    TMP_PATH: "/tmp/mapreduce"
    MAPREDUCE_WORKER_RETRY_INTERVAL: "2s"
    MAPREDUCE_WORKER_MAX_RETRIES: "10"
  restart: on-failure
  stop_grace_period: 30s

# File di input centralizzato (multipli)
x-input-file: &input-file "/root/data/Words.txt,/root/data/Words2.txt,/root/data/Words3.txt"

services:
  master0:
    <<: *master-config
    hostname: master0
    command: ["./mapreduce", "master", "0", *input-file]
    ports:
      - "1234:1234" # Raft
      - "8000:8000" # RPC
      - "8100:8100" # Health check
      - "9090:9090" # Metrics

  master1:
    <<: *master-config
    hostname: master1
    command: ["./mapreduce", "master", "1", *input-file]
    ports:
      - "1235:1234"
      - "8001:8001"
      - "8101:8101" # Health check

  master2:
    <<: *master-config
    hostname: master2
    command: ["./mapreduce", "master", "2", *input-file]
    ports:
      - "1236:1234"
      - "8002:8002"
      - "8102:8102" # Health check

  worker1:
    <<: *worker-config
    environment:
      <<: *common-vars
      RPC_ADDRESSES: "master0:8000,master1:8001,master2:8002"
      TMP_PATH: "/tmp/mapreduce"
      MAPREDUCE_WORKER_RETRY_INTERVAL: "2s"
      MAPREDUCE_WORKER_MAX_RETRIES: "10"
      WORKER_ID: "worker-1"

  worker2:
    <<: *worker-config
    environment:
      <<: *common-vars
      RPC_ADDRESSES: "master0:8000,master1:8001,master2:8002"
      TMP_PATH: "/tmp/mapreduce"
      MAPREDUCE_WORKER_RETRY_INTERVAL: "2s"
      MAPREDUCE_WORKER_MAX_RETRIES: "10"
      WORKER_ID: "worker-2"

  worker3:
    <<: *worker-config
    environment:
      <<: *common-vars
      RPC_ADDRESSES: "master0:8000,master1:8001,master2:8002"
      TMP_PATH: "/tmp/mapreduce"
      MAPREDUCE_WORKER_RETRY_INTERVAL: "2s"
      MAPREDUCE_WORKER_MAX_RETRIES: "10"
      WORKER_ID: "worker-3"

  # Servizi aggiuntivi per gestione dinamica
  master3:
    <<: *master-config
    hostname: master3
    command: ["./mapreduce", "master", "3", *input-file]
    ports:
      - "1237:1234"
      - "8003:8000"
    environment:
      <<: *extended-vars
    profiles:
      - additional

  worker4:
    <<: *worker-config
    environment:
      <<: *common-vars
      RPC_ADDRESSES: "master0:8000,master1:8001,master2:8002,master3:8000"
      TMP_PATH: "/tmp/mapreduce"
      MAPREDUCE_WORKER_RETRY_INTERVAL: "2s"
      MAPREDUCE_WORKER_MAX_RETRIES: "10"
      WORKER_ID: "worker-4"
    profiles:
      - additional

  dashboard:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: ["./mapreduce", "dashboard", "--port", "8080"]
    depends_on: ["master0", "master1", "master2"]
    networks:
      - mapreduce-net
    ports:
      - "8080:8080"
    volumes:
      - intermediate-data:/tmp/mapreduce
      - ${PWD}/data:/root/data
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      RAFT_ADDRESSES: "master0:1234,master1:1234,master2:1234"
      RPC_ADDRESSES: "master0:8000,master1:8001,master2:8002"
      TMP_PATH: "/tmp/mapreduce"
      METRICS_ENABLED: "true"
      METRICS_PORT: "9090"
      # WebSocket configuration
      WEBSOCKET_ENABLED: "true"
      WEBSOCKET_UPDATE_INTERVAL: "5s"
    restart: unless-stopped
    stop_grace_period: 30s

networks:
  mapreduce-net:

volumes:
  intermediate-data: