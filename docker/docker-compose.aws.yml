services:
  mapreduce-dashboard:
    build:
      context: ..
      dockerfile: docker/Dockerfile.aws
    container_name: mapreduce-dashboard
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - S3_BUCKET=${S3_BUCKET}
      - INSTANCE_ID=${INSTANCE_ID}
      - INSTANCE_IP=${INSTANCE_IP}
      - ENVIRONMENT=aws
      - LOG_LEVEL=info
    volumes:
      - ../data:/app/data
      - ../web:/app/web
      - /var/log/mapreduce:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mapreduce-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mapreduce-master-1:
    build:
      context: ..
      dockerfile: docker/Dockerfile.aws
    container_name: mapreduce-master-1
    environment:
      - ROLE=master
      - MASTER_ID=master-1
      - DASHBOARD_URL=http://mapreduce-dashboard:8080
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - S3_BUCKET=${S3_BUCKET}
      - INSTANCE_ID=${INSTANCE_ID}
      - ENVIRONMENT=aws
      - TMP_PATH=/tmp/mapreduce
      - MAPREDUCE_INPUT_GLOB=/app/data/*.txt
    volumes:
      - ../data:/app/data:ro
    depends_on:
      - mapreduce-dashboard
    restart: unless-stopped
    networks:
      - mapreduce-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mapreduce-master-2:
    build:
      context: ..
      dockerfile: docker/Dockerfile.aws
    container_name: mapreduce-master-2
    environment:
      - ROLE=master
      - MASTER_ID=master-2
      - DASHBOARD_URL=http://mapreduce-dashboard:8080
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - S3_BUCKET=${S3_BUCKET}
      - INSTANCE_ID=${INSTANCE_ID}
      - ENVIRONMENT=aws
      - TMP_PATH=/tmp/mapreduce
      - MAPREDUCE_INPUT_GLOB=/app/data/*.txt
    volumes:
      - ../data:/app/data:ro
    depends_on:
      - mapreduce-dashboard
    restart: unless-stopped
    networks:
      - mapreduce-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mapreduce-master-3:
    build:
      context: ..
      dockerfile: docker/Dockerfile.aws
    container_name: mapreduce-master-3
    environment:
      - ROLE=master
      - MASTER_ID=master-3
      - DASHBOARD_URL=http://mapreduce-dashboard:8080
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - S3_BUCKET=${S3_BUCKET}
      - INSTANCE_ID=${INSTANCE_ID}
      - ENVIRONMENT=aws
      - TMP_PATH=/tmp/mapreduce
      - MAPREDUCE_INPUT_GLOB=/app/data/*.txt
    volumes:
      - ../data:/app/data:ro
    depends_on:
      - mapreduce-dashboard
    restart: unless-stopped
    networks:
      - mapreduce-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mapreduce-worker-1:
    build:
      context: ..
      dockerfile: docker/Dockerfile.aws
    container_name: mapreduce-worker-1
    environment:
      - ROLE=worker
      - WORKER_ID=worker-1
      - DASHBOARD_URL=http://mapreduce-dashboard:8080
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - S3_BUCKET=${S3_BUCKET}
      - INSTANCE_ID=${INSTANCE_ID}
      - ENVIRONMENT=aws
      - TMP_PATH=/tmp/mapreduce
    volumes:
      - ../data:/app/data:ro
    depends_on:
      - mapreduce-dashboard
    restart: unless-stopped
    networks:
      - mapreduce-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mapreduce-worker-2:
    build:
      context: ..
      dockerfile: docker/Dockerfile.aws
    container_name: mapreduce-worker-2
    environment:
      - ROLE=worker
      - WORKER_ID=worker-2
      - DASHBOARD_URL=http://mapreduce-dashboard:8080
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - S3_BUCKET=${S3_BUCKET}
      - INSTANCE_ID=${INSTANCE_ID}
      - ENVIRONMENT=aws
      - TMP_PATH=/tmp/mapreduce
    volumes:
      - ../data:/app/data:ro
    depends_on:
      - mapreduce-dashboard
    restart: unless-stopped
    networks:
      - mapreduce-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mapreduce-worker-3:
    build:
      context: ..
      dockerfile: docker/Dockerfile.aws
    container_name: mapreduce-worker-3
    environment:
      - ROLE=worker
      - WORKER_ID=worker-3
      - DASHBOARD_URL=http://mapreduce-dashboard:8080
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - S3_BUCKET=${S3_BUCKET}
      - INSTANCE_ID=${INSTANCE_ID}
      - ENVIRONMENT=aws
      - TMP_PATH=/tmp/mapreduce
    volumes:
      - ../data:/app/data:ro
    depends_on:
      - mapreduce-dashboard
    restart: unless-stopped
    networks:
      - mapreduce-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # S3 Sync Service
  s3-sync:
    image: amazon/aws-cli:latest
    container_name: mapreduce-s3-sync
    environment:
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - S3_BUCKET=${S3_BUCKET}
    volumes:
      - ../data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    command: >
      sh -c "
        while true; do
          echo 'Syncing data to S3...'
          aws s3 sync /data s3://$$S3_BUCKET/data/ --delete
          echo 'S3 sync completed at $$(date)'
          sleep 300
        done
      "
    restart: unless-stopped
    networks:
      - mapreduce-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Health Check Service
  health-check:
    image: curlimages/curl:latest
    container_name: mapreduce-health-check
    command: >
      sh -c "
        while true; do
          echo 'Performing health check...'
          curl -f http://mapreduce-dashboard:8080/health || echo 'Health check failed'
          sleep 60
        done
      "
    depends_on:
      - mapreduce-dashboard
    restart: unless-stopped
    networks:
      - mapreduce-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  mapreduce-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mapreduce-data:
    driver: local
  mapreduce-logs:
    driver: local